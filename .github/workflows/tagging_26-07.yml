name: Create Release Tag

on:
  pull_request:
    types:
      - closed

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout pull request branch
        uses: actions/checkout@v3

      - name: Determine tag version
        id: determine_version
        run: |
          previous_version=$(cat version.txt)
          echo "Current version: $previous_version"

          major_keyword='MAJOR/major'
          minor_keyword='MINOR/minor'
          patch_keyword='PATCH/patch'
          
          pull_request_description=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" | \
            jq -r '.body')

          if [[ "$pull_request_description" == *"$major_keyword"* ]]; then
            new_version=$(echo $previous_version | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/\1/')
            new_version=$((new_version + 1))
            new_tag="v${new_version}.0.0"
          elif [[ "$pull_request_description" == *"$minor_keyword"* ]]; then
            new_version=$(echo $previous_version | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/\2/')
            new_version=$((new_version + 1))
            new_tag=$(echo $previous_version | sed -E "s/v[0-9]+\.[0-9]+\.[0-9]+/v0.${new_version}.0/")
          elif [[ "$pull_request_description" == *"$patch_keyword"* ]]; then
            new_version=$(echo $previous_version | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/\3/')
            new_version=$((new_version + 1))
            new_tag=$(echo $previous_version | sed -E "s/v[0-9]+\.[0-9]+\.[0-9]+/v0.0.${new_version}/")
          else
            echo "No keyword found in the pull request description. Skipping tag creation."
            exit 0
          fi

          echo "New tag version: $new_tag"
          echo $new_tag > version.txt
          echo "::set-output name=new_tag::$new_tag"

      - name: Create Git tag
        if: steps.determine_version.outputs.new_tag != 'v0.0.0'
        run: |
          git tag ${{ steps.determine_version.outputs.new_tag }}
          git push origin ${{ steps.determine_version.outputs.new_tag }}
